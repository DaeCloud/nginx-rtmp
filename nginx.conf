worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    include       /usr/local/nginx/conf/mime.types;  # Updated path
    default_type  application/octet-stream;

    server {
        listen 80;

        # HLS fragments
        location / {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /usr/local/nginx/html/stream;
            add_header Cache-Control no-cache;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}

rtmp {
    server {
        listen 1935; # Listen on standard RTMP port

        chunk_size 4000;

        application stream {
            live on;

            # HLS
            hls on;
            hls_path /usr/local/nginx/html/stream;
            hls_fragment 3;
            hls_playlist_length 60;

            # disable consuming the stream from nginx as rtmp
            deny play all;
        }
    }
}
